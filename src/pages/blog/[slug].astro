---
import Layout from "../../layouts/Layout.astro";
import { ghostClient } from "../../services/ghost";
import type { PostsOrPages, PostOrPage, Tag } from "@tryghost/content-api";
import Newsletter from "../../components/Newsletter";
import type { MetaProps } from "../../components/MetaTags.astro";
import { Image } from "astro:assets";
import BlogContent from "../../components/BlogContent.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { getBlogById } from "../../services/notion";

export const prerender = true;

interface Props {
  post: CollectionEntry<"blogs">["data"];
  meta: MetaProps;
}

export async function getStaticPaths() {
  const posts = await getCollection("blogs");
  const mappedPosts = await Promise.all(
    posts.map(async (post) => {
      const fullPost = await getBlogById(post.data.ID.toString());
      if (fullPost === null) {
        return undefined;
      }
      return {
        params: {
          slug: post.data.slug,
        },
        props: {
          post: fullPost,
          meta: {
            title: fullPost.title,
            // TODO: Change this to the first 100 words of the blog post
            description: fullPost.seoDescription,
            image: fullPost.coverImage[0],
            url: "https://prannaykedia.com/blog/" + fullPost.slug,
          },
        },
      };
    })
  );

  return mappedPosts.filter(
    (post): post is { params: any; props: any } =>
      post !== null && post !== undefined
  );
}

const { post, meta } = Astro.props;

if (post.content === undefined) {
  Astro.redirect("/404");
}
---

<Layout title={post.title} metaData={meta}>
  <section
    id="blog-header"
    class="flex-col flex md:flex-row items-center lg:px-24 md:px-24 px-6 mt-12 gap-12 justify-around">
    <div
      class="order-2 md:order-1 md:max-w-2xl flex flex-col gap-3 text-center md:text-start md:gap-6">
      <h1 class="text-2xl md:text-4xl font-bold">
        {post.title}
      </h1>
      <p class="text-gray-500 font-light text-xs md:text-sm">
        {
          new Date(
            post.publishedDate ?? post.createdDate ?? "1.1.2023"
          ).toLocaleDateString(undefined, {
            year: "numeric",
            month: "long",
            day: "2-digit",
          })
        }
      </p>
    </div>
    {
      post.coverImage[0] && (
        <Image
          width={2400}
          height={1000}
          format="webp"
          transition:name={post.slug}
          src={post.coverImage[0] || ""}
          class="md:w-1/2 aspect-video md:order-2 rounded-xl"
          alt={post.seoDescription || ""}
        />
      )
    }
  </section>

  <section id="blog-content">
    <BlogContent post={post.content} />
  </section>

  <Newsletter client:visible />
</Layout>
